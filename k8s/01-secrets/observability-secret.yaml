# ==============================================================================
# GRAFANA SECRETS
# ==============================================================================
# Purpose: Grafana admin credentials and configuration
# ==============================================================================

apiVersion: v1
kind: Secret
metadata:
  name: grafana-secret
  namespace: observability
  labels:
    app: grafana
    component: observability
type: Opaque
data:
  # admin / Grafana admin username
  GF_SECURITY_ADMIN_USER: YWRtaW4=
  
  # admin / Grafana admin password
  # IMPORTANT: Change this in production!
  GF_SECURITY_ADMIN_PASSWORD: YWRtaW4=
  
  # my-secret-key-12345 / Secret key for signing
  GF_SECURITY_SECRET_KEY: bXktc2VjcmV0LWtleS0xMjM0NQ==

---
# ==============================================================================
# PROMETHEUS SECRETS (Optional)
# ==============================================================================
# Purpose: Prometheus basic auth and alertmanager config
# ==============================================================================

apiVersion: v1
kind: Secret
metadata:
  name: prometheus-secret
  namespace: observability
  labels:
    app: prometheus
    component: observability
type: Opaque
data:
  # prometheus / Basic auth username (if enabled)
  PROMETHEUS_USERNAME: cHJvbWV0aGV1cw==
  
  # prometheus / Basic auth password (if enabled)
  PROMETHEUS_PASSWORD: cHJvbWV0aGV1cw==

---
# ==============================================================================
# JAEGER SECRETS (Optional)
# ==============================================================================
# Purpose: Jaeger authentication and storage credentials
# ==============================================================================

apiVersion: v1
kind: Secret
metadata:
  name: jaeger-secret
  namespace: observability
  labels:
    app: jaeger
    component: observability
type: Opaque
data:
  # jaeger / Basic auth username (if enabled)
  JAEGER_USERNAME: amFlZ2Vy
  
  # jaeger / Basic auth password (if enabled)
  JAEGER_PASSWORD: amFlZ2Vy
  
  # http://jaeger:14268/api/traces / Collector endpoint
  JAEGER_ENDPOINT: aHR0cDovL2phZWdlcjoxNDI2OC9hcGkvdHJhY2Vz
  
  # http://jaeger-collector:14268/api/traces / Alternative endpoint
  JAEGER_COLLECTOR_ENDPOINT: aHR0cDovL2phZWdlci1jb2xsZWN0b3I6MTQyNjgvYXBpL3RyYWNlcw==

---
# ==============================================================================
# ALERTMANAGER SECRETS (Optional)
# ==============================================================================
# Purpose: Alertmanager notification credentials
# ==============================================================================

apiVersion: v1
kind: Secret
metadata:
  name: alertmanager-secret
  namespace: observability
  labels:
    app: alertmanager
    component: observability
type: Opaque
data:
  # smtp.gmail.com / SMTP server
  SMTP_HOST: c210cC5nbWFpbC5jb20=
  
  # 587 / SMTP port
  SMTP_PORT: NTg3
  
  # alerts@example.com / From email address
  SMTP_FROM: YWxlcnRzQGV4YW1wbGUuY29t
  
  # your-email@gmail.com / SMTP username
  SMTP_USERNAME: eW91ci1lbWFpbEBnbWFpbC5jb20=
  
  # your-app-password / SMTP password
  SMTP_PASSWORD: eW91ci1hcHAtcGFzc3dvcmQ=
  
  # https://hooks.slack.com/services/xxx/yyy/zzz / Slack webhook URL
  SLACK_WEBHOOK_URL: aHR0cHM6Ly9ob29rcy5zbGFjay5jb20vc2VydmljZXMveHh4L3l5eS96eno=
  
  # https://api.pagerduty.com/... / PagerDuty integration key
  PAGERDUTY_KEY: eW91ci1wYWdlcmR1dHkta2V5

