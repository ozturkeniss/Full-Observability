basePath: /
host: localhost:8081
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a product service with full observability (logging, tracing,
    metrics)
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Product Service API
  version: "1.0"
paths:
  /admin/stats:
    get:
      description: Admin endpoint to get user statistics
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              active_users:
                type: integer
              admin_count:
                type: integer
              total_users:
                type: integer
              user_count:
                type: integer
            type: object
        "403":
          description: Forbidden
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get user statistics (admin)
      tags:
      - Admin
  /admin/users:
    get:
      description: Admin endpoint to list all users with pagination and filtering
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Role filter (user/admin)
        in: query
        name: role
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              properties:
                email:
                  type: string
                full_name:
                  type: string
                id:
                  type: integer
                role:
                  type: string
                username:
                  type: string
              type: object
            type: array
        "403":
          description: Forbidden
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: List all users (admin)
      tags:
      - Admin
    post:
      consumes:
      - application/json
      description: Admin endpoint to create a new user with specified role
      parameters:
      - description: User data
        in: body
        name: request
        required: true
        schema:
          properties:
            email:
              type: string
            full_name:
              type: string
            password:
              type: string
            role:
              type: string
            username:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            properties:
              email:
                type: string
              full_name:
                type: string
              id:
                type: integer
              role:
                type: string
              username:
                type: string
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "403":
          description: Forbidden
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create user (admin)
      tags:
      - Admin
  /admin/users/{id}:
    delete:
      description: Admin endpoint to delete a user (soft delete)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              message:
                type: string
            type: object
        "403":
          description: Forbidden
          schema:
            properties:
              error:
                type: string
            type: object
        "404":
          description: Not Found
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete user (admin)
      tags:
      - Admin
    get:
      description: Admin endpoint to get specific user details
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              email:
                type: string
              full_name:
                type: string
              id:
                type: integer
              role:
                type: string
              username:
                type: string
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "403":
          description: Forbidden
          schema:
            properties:
              error:
                type: string
            type: object
        "404":
          description: Not Found
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get user by ID (admin)
      tags:
      - Admin
    put:
      consumes:
      - application/json
      description: Admin endpoint to update user information
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update data
        in: body
        name: request
        required: true
        schema:
          properties:
            email:
              type: string
            full_name:
              type: string
            password:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              email:
                type: string
              full_name:
                type: string
              id:
                type: integer
              username:
                type: string
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "403":
          description: Forbidden
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update user (admin)
      tags:
      - Admin
  /admin/users/{id}/active:
    put:
      consumes:
      - application/json
      description: Admin endpoint to activate/deactivate user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Active status
        in: body
        name: request
        required: true
        schema:
          properties:
            is_active:
              type: boolean
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              id:
                type: integer
              is_active:
                type: boolean
              username:
                type: string
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "403":
          description: Forbidden
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Toggle user active status (admin)
      tags:
      - Admin
  /admin/users/{id}/role:
    put:
      consumes:
      - application/json
      description: Admin endpoint to change user's role
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: New role
        in: body
        name: request
        required: true
        schema:
          properties:
            role:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              id:
                type: integer
              role:
                type: string
              username:
                type: string
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "403":
          description: Forbidden
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Change user role (admin)
      tags:
      - Admin
  /api/products:
    get:
      description: Get a list of all products with pagination
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Category filter
        in: query
        name: category
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              data:
                properties:
                  limit:
                    type: integer
                  offset:
                    type: integer
                  products:
                    type: array
                  total:
                    type: integer
                type: object
              success:
                type: boolean
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
              success:
                type: boolean
            type: object
      summary: List all products
      tags:
      - Products
    post:
      consumes:
      - application/json
      description: Create a new product (Admin only)
      parameters:
      - description: Product data
        in: body
        name: request
        required: true
        schema:
          properties:
            category:
              type: string
            description:
              type: string
            is_active:
              type: boolean
            name:
              type: string
            price:
              type: number
            sku:
              type: string
            stock:
              type: integer
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            properties:
              data:
                type: object
              message:
                type: string
              success:
                type: boolean
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
              success:
                type: boolean
            type: object
        "403":
          description: Forbidden
          schema:
            properties:
              error:
                type: string
              success:
                type: boolean
            type: object
      security:
      - BearerAuth: []
      summary: Create a new product
      tags:
      - Products
  /api/products/{id}:
    delete:
      description: Delete a product by ID (Admin only)
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              message:
                type: string
              success:
                type: boolean
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
              success:
                type: boolean
            type: object
        "403":
          description: Forbidden
          schema:
            properties:
              error:
                type: string
              success:
                type: boolean
            type: object
      security:
      - BearerAuth: []
      summary: Delete a product
      tags:
      - Products
    get:
      description: Get a specific product by its ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              data:
                type: object
              success:
                type: boolean
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
              success:
                type: boolean
            type: object
        "404":
          description: Not Found
          schema:
            properties:
              error:
                type: string
              success:
                type: boolean
            type: object
      summary: Get product by ID
      tags:
      - Products
    put:
      consumes:
      - application/json
      description: Update an existing product (Admin only)
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Product data
        in: body
        name: request
        required: true
        schema:
          properties:
            category:
              type: string
            description:
              type: string
            is_active:
              type: boolean
            name:
              type: string
            price:
              type: number
            sku:
              type: string
            stock:
              type: integer
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              data:
                type: object
              message:
                type: string
              success:
                type: boolean
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
              success:
                type: boolean
            type: object
        "403":
          description: Forbidden
          schema:
            properties:
              error:
                type: string
              success:
                type: boolean
            type: object
      security:
      - BearerAuth: []
      summary: Update a product
      tags:
      - Products
  /api/products/{id}/stock:
    patch:
      consumes:
      - application/json
      description: Update the stock quantity of a product (Admin only)
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Stock data
        in: body
        name: request
        required: true
        schema:
          properties:
            stock:
              type: integer
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              message:
                type: string
              success:
                type: boolean
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
              success:
                type: boolean
            type: object
        "403":
          description: Forbidden
          schema:
            properties:
              error:
                type: string
              success:
                type: boolean
            type: object
      security:
      - BearerAuth: []
      summary: Update product stock
      tags:
      - Products
  /api/products/stats:
    get:
      description: Get product statistics (total, by category, etc.)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              data:
                type: object
              success:
                type: boolean
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
              success:
                type: boolean
            type: object
      summary: Get product statistics
      tags:
      - Products
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and get JWT token
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          properties:
            password:
              type: string
            username:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              token:
                type: string
              user:
                type: object
            type: object
        "401":
          description: Unauthorized
          schema:
            properties:
              error:
                type: string
            type: object
      summary: User login
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Create a new user account
      parameters:
      - description: User registration data
        in: body
        name: request
        required: true
        schema:
          properties:
            email:
              type: string
            full_name:
              type: string
            password:
              type: string
            username:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            properties:
              created_at:
                type: string
              email:
                type: string
              full_name:
                type: string
              id:
                type: integer
              is_active:
                type: boolean
              role:
                type: string
              updated_at:
                type: string
              username:
                type: string
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Register a new user
      tags:
      - Auth
  /health:
    get:
      description: Check service health and database connectivity
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              status:
                type: string
            type: object
        "503":
          description: Service Unavailable
          schema:
            properties:
              error:
                type: string
              status:
                type: string
            type: object
      summary: Health check
      tags:
      - Health
  /swagger/:
    get:
      description: Swagger API documentation
      responses:
        "200":
          description: Swagger UI
          schema:
            type: string
      summary: Swagger documentation
      tags:
      - Swagger
  /users/me:
    get:
      description: Get authenticated user's profile information
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              email:
                type: string
              full_name:
                type: string
              id:
                type: integer
              is_active:
                type: boolean
              role:
                type: string
              username:
                type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            properties:
              error:
                type: string
            type: object
        "404":
          description: Not Found
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get current user profile
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Update authenticated user's profile
      parameters:
      - description: Update data
        in: body
        name: request
        required: true
        schema:
          properties:
            email:
              type: string
            full_name:
              type: string
            password:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              email:
                type: string
              full_name:
                type: string
              id:
                type: integer
              username:
                type: string
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update current user profile
      tags:
      - Users
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
