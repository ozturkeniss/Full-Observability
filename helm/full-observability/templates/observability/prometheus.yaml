{{- if .Values.prometheus.enabled }}
{{- if .Values.prometheus.persistence.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-pvc
  namespace: {{ .Values.global.namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  {{- if .Values.global.storageClass }}
  storageClassName: {{ .Values.global.storageClass }}
  {{- end }}
  resources:
    requests:
      storage: {{ .Values.prometheus.persistence.size }}
---
{{- end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: {{ .Values.global.namespace }}
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: {{ .Values.global.imageRegistry }}/{{ .Values.prometheus.image.repository }}:{{ .Values.prometheus.image.tag }}
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          ports:
            - containerPort: {{ .Values.prometheus.service.port }}
              name: prometheus
          args:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--storage.tsdb.retention.time={{ .Values.prometheus.retention }}'
            - '--web.enable-lifecycle'
          {{- if .Values.prometheus.persistence.enabled }}
          volumeMounts:
            - name: prometheus-data
              mountPath: /prometheus
            - name: prometheus-config
              mountPath: /etc/prometheus
          {{- end }}
          resources:
            {{- toYaml .Values.prometheus.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: {{ .Values.prometheus.service.port }}
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /-/ready
              port: {{ .Values.prometheus.service.port }}
            initialDelaySeconds: 5
            periodSeconds: 5
      {{- if .Values.prometheus.persistence.enabled }}
      volumes:
        - name: prometheus-data
          persistentVolumeClaim:
            claimName: prometheus-pvc
        - name: prometheus-config
          configMap:
            name: prometheus-config
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: {{ .Values.global.namespace }}
  labels:
    app: prometheus
spec:
  type: {{ .Values.prometheus.service.type }}
  ports:
    - port: {{ .Values.prometheus.service.port }}
      targetPort: {{ .Values.prometheus.service.port }}
      {{- if eq .Values.prometheus.service.type "NodePort" }}
      nodePort: {{ .Values.prometheus.service.nodePort }}
      {{- end }}
      protocol: TCP
      name: prometheus
  selector:
    app: prometheus
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: {{ .Values.global.namespace }}
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    scrape_configs:
      - job_name: 'user-service'
        static_configs:
          - targets: ['user-service:8080']
      - job_name: 'product-service'
        static_configs:
          - targets: ['product-service:8081']
      - job_name: 'inventory-service'
        static_configs:
          - targets: ['inventory-service:8082']
      - job_name: 'payment-service'
        static_configs:
          - targets: ['payment-service:8083']
      - job_name: 'api-gateway'
        static_configs:
          - targets: ['api-gateway:8000']
{{- end }}

