{{- if .Values.postgresql.enabled }}
{{- if .Values.postgresql.persistence.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: {{ .Values.global.namespace }}
spec:
  accessModes:
    - {{ .Values.postgresql.persistence.accessMode }}
  {{- if .Values.global.storageClass }}
  storageClassName: {{ .Values.global.storageClass }}
  {{- end }}
  resources:
    requests:
      storage: {{ .Values.postgresql.persistence.size }}
---
{{- end }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: {{ .Values.global.namespace }}
  labels:
    app: postgres
    component: database
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
        component: database
    spec:
      containers:
        - name: postgres
          image: {{ .Values.global.imageRegistry }}/{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          ports:
            - containerPort: {{ .Values.postgresql.service.port }}
              name: postgres
          envFrom:
            - secretRef:
                name: postgres-secret
          {{- if .Values.postgresql.persistence.enabled }}
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
            - name: init-scripts
              mountPath: /docker-entrypoint-initdb.d
          {{- end }}
          resources:
            {{- toYaml .Values.postgresql.resources | nindent 12 }}
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - {{ .Values.postgresql.auth.username }}
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - {{ .Values.postgresql.auth.username }}
            initialDelaySeconds: 5
            periodSeconds: 5
      {{- if .Values.postgresql.persistence.enabled }}
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-pvc
        - name: init-scripts
          configMap:
            name: postgres-init-scripts
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: {{ .Values.global.namespace }}
  labels:
    app: postgres
spec:
  type: {{ .Values.postgresql.service.type }}
  ports:
    - port: {{ .Values.postgresql.service.port }}
      targetPort: {{ .Values.postgresql.service.port }}
      protocol: TCP
      name: postgres
  selector:
    app: postgres
{{- end }}

