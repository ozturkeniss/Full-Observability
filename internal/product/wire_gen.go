// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package product

import (
	"github.com/tair/full-observability/internal/product/delivery/http"
	"github.com/tair/full-observability/internal/product/repository"
	"github.com/tair/full-observability/internal/product/usecase/command"
	"github.com/tair/full-observability/internal/product/usecase/query"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func InitializeHTTPHandler(db *gorm.DB) (*http.ProductHandler, error) {
	productRepository := ProvideProductRepository(db)
	createProductHandler := ProvideCreateProductHandler(productRepository)
	updateProductHandler := ProvideUpdateProductHandler(productRepository)
	deleteProductHandler := ProvideDeleteProductHandler(productRepository)
	updateStockHandler := ProvideUpdateStockHandler(productRepository)
	getProductHandler := ProvideGetProductHandler(productRepository)
	listProductsHandler := ProvideListProductsHandler(productRepository)
	getStatsHandler := ProvideGetStatsHandler(productRepository)
	productHandler := http.NewProductHandlerWithDI(
		createProductHandler,
		updateProductHandler,
		deleteProductHandler,
		updateStockHandler,
		getProductHandler,
		listProductsHandler,
		getStatsHandler,
		productRepository,
	)
	return productHandler, nil
}

// wire.go:

func ProvideProductRepository(db *gorm.DB) repository.GormProductRepository {
	return *repository.NewGormProductRepository(db)
}

func ProvideCreateProductHandler(repo repository.GormProductRepository) *command.CreateProductHandler {
	return command.NewCreateProductHandler(&repo)
}

func ProvideUpdateProductHandler(repo repository.GormProductRepository) *command.UpdateProductHandler {
	return command.NewUpdateProductHandler(&repo)
}

func ProvideDeleteProductHandler(repo repository.GormProductRepository) *command.DeleteProductHandler {
	return command.NewDeleteProductHandler(&repo)
}

func ProvideUpdateStockHandler(repo repository.GormProductRepository) *command.UpdateStockHandler {
	return command.NewUpdateStockHandler(&repo)
}

func ProvideGetProductHandler(repo repository.GormProductRepository) *query.GetProductHandler {
	return query.NewGetProductHandler(&repo)
}

func ProvideListProductsHandler(repo repository.GormProductRepository) *query.ListProductsHandler {
	return query.NewListProductsHandler(&repo)
}

func ProvideGetStatsHandler(repo repository.GormProductRepository) *query.GetStatsHandler {
	return query.NewGetStatsHandler(&repo)
}

