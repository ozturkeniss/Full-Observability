syntax = "proto3";

package product.v1;

option go_package = "github.com/tair/full-observability/api/proto/product;productpb";

import "google/protobuf/timestamp.proto";

// ProductService provides product management operations
service ProductService {
  // Product CRUD operations
  rpc CreateProduct(CreateProductRequest) returns (ProductResponse);
  rpc GetProduct(GetProductRequest) returns (ProductResponse);
  rpc UpdateProduct(UpdateProductRequest) returns (ProductResponse);
  rpc DeleteProduct(DeleteProductRequest) returns (DeleteProductResponse);
  rpc ListProducts(ListProductsRequest) returns (ListProductsResponse);
  
  // Stock management
  rpc UpdateStock(UpdateStockRequest) returns (UpdateStockResponse);
  rpc CheckAvailability(CheckAvailabilityRequest) returns (CheckAvailabilityResponse);
  
  // Statistics
  rpc GetStats(GetStatsRequest) returns (StatsResponse);
}

// Product message
message Product {
  uint32 id = 1;
  string name = 2;
  string description = 3;
  double price = 4;
  int32 stock = 5;
  string category = 6;
  string sku = 7;
  bool is_active = 8;
  google.protobuf.Timestamp created_at = 9;
  google.protobuf.Timestamp updated_at = 10;
}

// Create product request/response
message CreateProductRequest {
  string name = 1;
  string description = 2;
  double price = 3;
  int32 stock = 4;
  string category = 5;
  string sku = 6;
  bool is_active = 7;
}

message ProductResponse {
  Product product = 1;
}

// Get product request
message GetProductRequest {
  uint32 id = 1;
}

// Update product request
message UpdateProductRequest {
  uint32 id = 1;
  string name = 2;
  string description = 3;
  double price = 4;
  int32 stock = 5;
  string category = 6;
  string sku = 7;
  bool is_active = 8;
}

// Delete product request/response
message DeleteProductRequest {
  uint32 id = 1;
}

message DeleteProductResponse {
  string message = 1;
}

// List products request/response
message ListProductsRequest {
  int32 limit = 1;
  int32 offset = 2;
  string category = 3;
}

message ListProductsResponse {
  repeated Product products = 1;
  int32 total = 2;
}

// Update stock request/response
message UpdateStockRequest {
  uint32 product_id = 1;
  int32 stock = 2;
}

message UpdateStockResponse {
  string message = 1;
  int32 new_stock = 2;
}

// Check availability request/response
message CheckAvailabilityRequest {
  uint32 product_id = 1;
  int32 quantity = 2;
}

message CheckAvailabilityResponse {
  bool available = 1;
  int32 current_stock = 2;
  string message = 3;
}

// Get stats request/response
message GetStatsRequest {}

message StatsResponse {
  int64 total_products = 1;
  int64 active_products = 2;
  int64 out_of_stock = 3;
  int64 low_stock = 4;
  map<string, int64> products_by_category = 5;
}

