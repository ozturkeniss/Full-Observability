syntax = "proto3";

package inventory.v1;

option go_package = "github.com/tair/full-observability/api/proto/inventory;inventorypb";

import "google/protobuf/timestamp.proto";

// InventoryService provides inventory management operations
service InventoryService {
  // Inventory CRUD operations
  rpc CreateInventory(CreateInventoryRequest) returns (InventoryResponse);
  rpc GetInventory(GetInventoryRequest) returns (InventoryResponse);
  rpc UpdateQuantity(UpdateQuantityRequest) returns (InventoryResponse);
  rpc DeleteInventory(DeleteInventoryRequest) returns (DeleteInventoryResponse);
  rpc ListInventory(ListInventoryRequest) returns (ListInventoryResponse);
  
  // Product-specific operations
  rpc GetByProductID(GetByProductIDRequest) returns (InventoryResponse);
  rpc CheckAvailability(CheckAvailabilityRequest) returns (CheckAvailabilityResponse);
  
  // Bulk operations
  rpc ReserveStock(ReserveStockRequest) returns (ReserveStockResponse);
  rpc ReleaseStock(ReleaseStockRequest) returns (ReleaseStockResponse);
}

// Inventory message
message Inventory {
  uint32 id = 1;
  uint32 product_id = 2;
  int32 quantity = 3;
  string location = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

// CreateInventoryRequest
message CreateInventoryRequest {
  uint32 product_id = 1;
  int32 quantity = 2;
  string location = 3;
}

// GetInventoryRequest
message GetInventoryRequest {
  uint32 id = 1;
}

// UpdateQuantityRequest
message UpdateQuantityRequest {
  uint32 id = 1;
  int32 quantity = 2;
}

// DeleteInventoryRequest
message DeleteInventoryRequest {
  uint32 id = 1;
}

// ListInventoryRequest
message ListInventoryRequest {
  int32 limit = 1;
  int32 offset = 2;
}

// GetByProductIDRequest
message GetByProductIDRequest {
  uint32 product_id = 1;
}

// CheckAvailabilityRequest
message CheckAvailabilityRequest {
  uint32 product_id = 1;
  int32 required_quantity = 2;
}

// ReserveStockRequest
message ReserveStockRequest {
  uint32 product_id = 1;
  int32 quantity = 2;
  string reservation_id = 3;
}

// ReleaseStockRequest
message ReleaseStockRequest {
  uint32 product_id = 1;
  int32 quantity = 2;
  string reservation_id = 3;
}

// InventoryResponse
message InventoryResponse {
  bool success = 1;
  string message = 2;
  Inventory inventory = 3;
}

// DeleteInventoryResponse
message DeleteInventoryResponse {
  bool success = 1;
  string message = 2;
}

// ListInventoryResponse
message ListInventoryResponse {
  bool success = 1;
  repeated Inventory inventories = 2;
  int32 total = 3;
}

// CheckAvailabilityResponse
message CheckAvailabilityResponse {
  bool available = 1;
  int32 current_quantity = 2;
  string message = 3;
}

// ReserveStockResponse
message ReserveStockResponse {
  bool success = 1;
  string message = 2;
  string reservation_id = 3;
}

// ReleaseStockResponse
message ReleaseStockResponse {
  bool success = 1;
  string message = 2;
}

